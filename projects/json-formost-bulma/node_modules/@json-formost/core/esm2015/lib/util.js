function populateInterfaceProperties(target, source, properties) {
    const allProps = ['name', 'refid', 'title', 'description', 'help', ...properties];
    for (const prop of allProps) {
        if (source.hasOwnProperty(prop)) {
            target[prop] = source[prop];
        }
    }
}
const ɵ0 = (a, b) => {
    return 0;
}, ɵ1 = (a, b) => {
    return a.value.localeCompare(b.value);
}, ɵ2 = (a, b) => {
    return a.key > b.key ? -1 : (b.key > a.key ? 1 : 0);
};
const keyValueSorters = {
    // Preserve original property order
    originalOrder: ɵ0,
    // Order by ascending property value
    valueAscOrder: ɵ1,
    // Order by descending property key
    keyDescOrder: ɵ2
};
export { populateInterfaceProperties, keyValueSorters };
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2pzb24tZm9ybW9zdC1jb3JlL3NyYy9saWIvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLDJCQUEyQixDQUFDLE1BQWMsRUFBRSxNQUFjLEVBQUUsVUFBb0I7SUFDckYsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLEdBQUcsVUFBVSxDQUFDLENBQUM7SUFDbEYsS0FBSyxNQUFNLElBQUksSUFBSSxRQUFRLEVBQUU7UUFDekIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDL0I7S0FDSjtBQUNMLENBQUM7V0FJa0IsQ0FBQyxDQUEyQixFQUFFLENBQTJCLEVBQVUsRUFBRTtJQUNoRixPQUFPLENBQUMsQ0FBQztBQUNiLENBQUMsT0FHYyxDQUFDLENBQTJCLEVBQUUsQ0FBMkIsRUFBVSxFQUFFO0lBQ2hGLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFDLENBQUMsT0FHYSxDQUFDLENBQTJCLEVBQUUsQ0FBMkIsRUFBVSxFQUFFO0lBQy9FLE9BQU8sQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEQsQ0FBQztBQWRMLE1BQU0sZUFBZSxHQUFHO0lBQ3BCLG1DQUFtQztJQUNuQyxhQUFhLElBRVo7SUFFRCxvQ0FBb0M7SUFDcEMsYUFBYSxJQUVaO0lBRUQsbUNBQW1DO0lBQ25DLFlBQVksSUFFWDtDQUNKLENBQUM7QUFFRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXlWYWx1ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmZ1bmN0aW9uIHBvcHVsYXRlSW50ZXJmYWNlUHJvcGVydGllcyh0YXJnZXQ6IG9iamVjdCwgc291cmNlOiBvYmplY3QsIHByb3BlcnRpZXM6IHN0cmluZ1tdKSB7XG4gICAgY29uc3QgYWxsUHJvcHMgPSBbJ25hbWUnLCAncmVmaWQnLCAndGl0bGUnLCAnZGVzY3JpcHRpb24nLCAnaGVscCcsIC4uLnByb3BlcnRpZXNdO1xuICAgIGZvciAoY29uc3QgcHJvcCBvZiBhbGxQcm9wcykge1xuICAgICAgICBpZiAoc291cmNlLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICB0YXJnZXRbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNvbnN0IGtleVZhbHVlU29ydGVycyA9IHtcbiAgICAvLyBQcmVzZXJ2ZSBvcmlnaW5hbCBwcm9wZXJ0eSBvcmRlclxuICAgIG9yaWdpbmFsT3JkZXI6IChhOiBLZXlWYWx1ZTxudW1iZXIsIHN0cmluZz4sIGI6IEtleVZhbHVlPG51bWJlciwgc3RyaW5nPik6IG51bWJlciA9PiB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH0sXG5cbiAgICAvLyBPcmRlciBieSBhc2NlbmRpbmcgcHJvcGVydHkgdmFsdWVcbiAgICB2YWx1ZUFzY09yZGVyOiAoYTogS2V5VmFsdWU8bnVtYmVyLCBzdHJpbmc+LCBiOiBLZXlWYWx1ZTxudW1iZXIsIHN0cmluZz4pOiBudW1iZXIgPT4ge1xuICAgICAgICByZXR1cm4gYS52YWx1ZS5sb2NhbGVDb21wYXJlKGIudmFsdWUpO1xuICAgIH0sXG5cbiAgICAvLyBPcmRlciBieSBkZXNjZW5kaW5nIHByb3BlcnR5IGtleVxuICAgIGtleURlc2NPcmRlcjogKGE6IEtleVZhbHVlPG51bWJlciwgc3RyaW5nPiwgYjogS2V5VmFsdWU8bnVtYmVyLCBzdHJpbmc+KTogbnVtYmVyID0+IHtcbiAgICAgICAgcmV0dXJuIGEua2V5ID4gYi5rZXkgPyAtMSA6IChiLmtleSA+IGEua2V5ID8gMSA6IDApO1xuICAgIH1cbn07XG5cbmV4cG9ydCB7IHBvcHVsYXRlSW50ZXJmYWNlUHJvcGVydGllcywga2V5VmFsdWVTb3J0ZXJzIH07Il19