import { FormArray as NgFormArray, AbstractControl, ValidatorFn, AbstractControlOptions, AsyncValidatorFn } from '@angular/forms';
import { FormostAbstractControl } from '../formost-abstract-control.interface';
import { FormostJsonSchema7 } from '../formost-json-schema-7.interface';
import { SchemaConverterService } from '../formost-schema-converter.service';
export declare class FormArray<T = any, E extends object = any> extends NgFormArray implements FormostAbstractControl {
    controls: AbstractControl[];
    private fbs?;
    readonly value: T[];
    constructor(controls: AbstractControl[], validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[], fbs?: SchemaConverterService);
    name: string;
    refid: string;
    title?: string;
    description?: string;
    help?: string;
    itemTypes: FormostJsonSchema7[];
    uniqueItems?: boolean;
    contains?: FormostAbstractControl;
    additionalItems: FormostAbstractControl | boolean;
    minItems?: number;
    maxItems?: number;
    populate(source: object): void;
    getControlType(): "control" | "group" | "array";
    setValue(value: any[], options?: {
        onlySelf?: boolean;
        emitEvent?: boolean;
    }): void;
}
